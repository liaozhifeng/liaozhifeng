<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>xinyu</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://liaozhifeng.gitee.io/"/>
  <updated>2021-01-22T06:46:58.015Z</updated>
  <id>http://liaozhifeng.gitee.io/</id>
  
  <author>
    <name>廖志锋</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>离散数学复习</title>
    <link href="http://liaozhifeng.gitee.io/2021/01/22/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6%E5%A4%8D%E4%B9%A0/"/>
    <id>http://liaozhifeng.gitee.io/2021/01/22/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6%E5%A4%8D%E4%B9%A0/</id>
    <published>2021-01-22T06:32:56.000Z</published>
    <updated>2021-01-22T06:46:58.015Z</updated>
    
    <content type="html"><![CDATA[<h3 id="图论"><a href="#图论" class="headerlink" title="图论"></a>图论</h3><ul><li><p>零图：$E = ∅$，即只有顶点，没有边的图。</p></li><li><p>平凡图：只有一个顶点（也称$1$阶图）的零图。</p></li><li><p>悬挂顶点：度数为$1$的顶点；悬挂边：与悬挂顶点关联的边。</p></li><li><p>在无向图中，图的最大度：$∆(G)={d(v)|v\in V}$，其中$V$表示顶点集，$d(v)$表示顶点的度数，记住用$\Delta(G)$去表示最大度；同理图的最小度的定义易得，注意的是我们用$\delta(G)$表示图的最小度。另外无向图用$(v_n,v_m)$表示边。</p></li><li><p>在有向图中，$v$的入度$d^+(v)$，$v$的出度$d^-(v)$，$v$的度数$d(v) = d^+(v)+d^-(v)$，同时有向图还定义了出度、入度的最大度和最小度。有向图用$\langle v_n,v_m \rangle$表示边。</p></li><li><p>握手定理：图的所有顶点的度数之和等于边数的$2$倍，因为每条边都提供$2$度，所以度数之和一定是偶数。</p></li><li><p>度数列：$V=\{v_1,v_2,…v_n\}$，$G$的度数列：$d(v_1),d(v_2),…,d(v_n)$。</p></li><li><p>简单图：既无平行边也无环的图称为简单图。其中平行边的条数称为重数。</p></li><li><p>完全图和正则图：无向完全图，记作$K_n$，边数为$n(n-1)/2$，有向完全图，边数为$n(n-1)$；$k-$正则图：每个顶点的度数均为$k$的无向简单图。</p></li><li><p>子图：生成子图：$V’ = V$且$G’\subseteq G$；$V’$的导出子图，以两端点都在$V’$中所有的边集的子图，记作$G[V’]$；$E’$的导出子图：以$E’$所以关联的顶点为顶点集的子图，记作$G[E’]$。</p></li><li><p>通路：$Γ = v_0e_1v_1e_2…e_lv_l$ ，称$Γ $为$v_0$到$v_l$的通路，$l$为通路的长度，若$v_0=v_l$则称$Γ $为回路。若通路（回路）中所有顶点（对于回路，$v_0=v_l$）各异，称此通路<strong>初级通路（回路）</strong>；若通路中所有的边各异，则称为简单通路。初级通路是简单通路，反之不然。</p></li><li><p>$Γ$的表示方法 ：用顶点和边交替序列、用边序列、简单图中用顶点序列。</p></li><li><p>连通分支：设$R$是$G$中顶点之间的连通关系，按$R$可将$V(G)$划分为$k$个等价类，记作$V_1,V_2,…,V_k$，由他们的导出子图$G[V_1],G[V_2],…,G[V_k]$称为$G$的连通分支。令$p(G)=k$表示$G$的连通分支数为$k$。</p></li><li><p>点割集与边割集：若$V’ \subset V$，$p(V-V’)&gt;p(V)$，且$\forall V’’ \subset V$，$p(V-V’’) = V$，则称$V’$为$G$的点割集，若点割集只有一个点，则称此顶点为割点；同理可以得到边割集的定义，若边割集只有一条边则称此边为割边或桥。</p></li><li><p>点连通度和边连通度：记$min\{|V’| \space | V’$是$G$的点割集$\}=\kappa(G)$，称为$G$的点连通度；记$min\{|E’| \space|E’$是$G$的边割集$\} = \lambda(G)$，称为$G$的边连通度。对于任意的无向图有$\kappa(G)\leq \lambda(G)\leq \delta(G)$ 。</p></li><li><p>二部图判别定理：无向图$G=\langle V,E\rangle$是二部图当且仅当$G$中无奇数长度的回路，记作$\langle V_1,V_2,E\rangle$。二部图还有一个非常重要的匹配问题，匹配就是$E’ \subseteq E$，且$E’$中的边互补相邻，注意极大匹配，最大匹配，完备匹配，完美匹配等问题。</p><a id="more"></a></li><li><p>完备匹配判定定理$(|V_1|\leq|V_2|) $：(Hall定理)，存在$V_1,V_2$的完备匹配当且仅当$V_1$中任意$k(1\leq k\leq |V_1|)$个顶点至少与$V_2$中$k$个顶点相邻；（t条件）：如果存在正整数$t$，使得$V_1$中每个顶点至少关联$t$条边，而$V_2$中的顶点至多关联$t$条边，则$G$中存在$V_1$到$V_2$的完备匹配。</p></li><li><p>无向图关联矩阵：$m_{ij}$为$v_i$与$e_j$的关联次数；无环有向图关联矩阵：$m_{ij}=-1,0,1$，$1$代表是起点，$-1$代表是终点；关联矩阵记为$M$。<br>有向图的邻接矩阵：$a_{i,j}$为以$v_i$为起点，$v_j$为终点的边的条数，记为$A$。$A^l$中元素表示长度为$l$的边的条数。<br>可达矩阵：$p_{ij} = 0,1$，$1$表示可达。</p></li><li><p>欧拉通路：经过所有顶点且每条边恰好且经过一次的通路。无向图具有欧拉回路当且仅当$G$是连通的且无奇度顶点，无向图具有欧拉通路当且仅当图是连通的且只有两个奇度顶点。有向图具有欧拉回路当且仅当$G$是连通的且每个顶点的出度等于入度，具有欧拉通路当且图中有一个顶点$d^—d^+ = 1$，有一个顶点$d^+-d^-=1$，其他顶点的出度等于入度。</p></li><li><p>哈密顿通路：经过图中所有顶点一次且仅一次的通路。<br>必要条件：若无向图是哈密顿图，则对于$V$的任意非空真子集$V’$，均有$p(V-V’)&lt;|V’|$,推论，有割点的图不是哈密顿图。<br>充分条件：若$G$是$n$阶无向图，$d(u)+d(v)\geq n-1$，$u,v$为$G$中任意不相邻点，则$G$中存在哈密顿通路；若$d(u)+d(v)\geq n$则$G$中存在哈密顿回路。</p></li><li><p>基本回路系统：设$T$是$n$阶$m$条边的无向连通图$G$的一棵生成树，设$e_1,e_2,…,e_{n-m+1}$为$T$的弦，$C_r(r=1,2,…,m-n+1)$为$T$添加弦$e_r$产生的$G$中由弦$e_r$和树枝构成的圈，称$C_r$为$G$的对应弦$e_r$基本回路或基本图，称$\{C_1.C_2,…,C_{m-n+1}\}$为$G$对应$T$的基本回路系统，称$m-n+1$为$G$的圈秩，记作$ξ(G)$。</p></li><li><p>基本割集系统：设$T$是$n$阶的无向连通图$G$的一棵生成树，设$e_1,e_2,…,e_{n-1}$为$T$的树枝，$S_i(i=1,2,..,n-1)$为由树枝$e_i$和弦构成的割集。称$\{S_1,S_2,…,S_{n-1}\}$为$G$对应$T$的基本割集系统，称$n-1$为$G$的割集秩，记作$η(G)$。</p></li><li><p>平面图与平面嵌入：如果能将图$G$中除顶点外边不相交地画在平面上，则称$G$是平面图，由这个图画出的无边相交的图称为$G$的平面嵌入，没有平面嵌入的图称为非平面图。</p></li><li><p>平面图的一些概念：无限面，用$R_0$表示，有限面，用$R_1, R_2, …, R_k$表示，面$R_i$的次数，$R$边界的长度，用$deg(R_i)$表示。<br>平面图各面的次数之和等于边数的$2$倍，一条边或者是$2$个面的公共边界，或者在一个面中出现两次，特别要注意的是这种出现两次的情况，这种边应该只会在无限面中出现，所以在写无限面的边界时也应该注意，这条边要写两次。</p></li><li><p>极大平面图：在简单平面中任意不相邻的顶点之间加一条新边所得的图为非平面图。极大平面是连通的，且设$G$为$n(\geq3)$阶简单平面图，$G$为极大平面图的充分必要条件是，$G$的每个面次数均为$3$。</p></li><li><p>欧拉公式：设$G$为$n$阶$m$条边$r$个面的连通平面图，则$n-m+r=2$。<br>欧拉公式的推论：设平面$G$中有$p(p\geq 2)$连通分支，则$n-m+r=p+1$</p></li><li><p>同胚与收缩：$G_1$与$G_2$同构，或经过反复插入或消去$2$度顶点后，称为同胚。收缩边称为收缩。<br>库拉图斯基定理：一个图是平面图当且仅当它既不包含与$K_5$同胚的<strong>子图</strong>，也不含与$K_{3,3}$同胚的子图，一个图是平面图当且仅当它既无可收缩为$K_5$的子图，也无可收缩为$K_{3,3}$的子图。</p></li><li><p>对偶图的性质：设$G^<em>$是连通图$G$的对偶图，$n^</em>,m^<em>,r^</em>$和$n,m,r$分别为$G^<em>,G$的顶点数，边数，面数，有$n^</em>=r,m<em>=m,r^</em>=n$，设$G^<em>$的顶点$v^</em>_i$位于$G$的面$R_i$中，则$d(v^*_i)=deg(R_i)$。</p></li></ul><h3 id="代数结构"><a href="#代数结构" class="headerlink" title="代数结构"></a>代数结构</h3><ul><li>积代数：设$V_1 = \langle S_1, \circ \rangle, V_2 =\langle S_2, <em>\rangle$，$V_1$与$V_2$的积代数$V=\langle S_1\times S_2,\cdot\rangle$，$\langle x_1, y_1 \rangle,\langle x_2,y_2\rangle \in S_1\times S_2$。$\langle x_1, y_1 \rangle\cdot \langle x_2,y_2\rangle$<br>$=&lt;x_1\circ x_2, y_1</em>y_2&gt;$。</li><li>设$G=<a>$是$n$阶循环群，则对$n$的每个正因子$d$，$G$恰好有一个$d$阶的子群。</li><li>设$G=<a>$是循环群，若$G$是无限循环群，则$G$只有两个生成元，即$a$和$a^{-1}$。若$G$是$n$阶循环群，则$G$有$\phi(n)$个生成元，对于任意小于$n$且与$n$互素的自然数$r$，$a^r$是$G$的生成元。</li><li>子环判别定理：设$R$是环，$S$是$R$得非空子集，若$\forall a, b \in S$，$a-b\in S$且$\forall a,b \in S，ab\in S$，则$S$是$R$的子环。</li><li>如果$R$既是交换环、含幺环、无零因子环，则称$R$是整环。</li><li>域：若$R$是整环，则对$R$中的每个元素($\{0\}$除外)，都有逆元，则称$R$是域。</li><li>格的定义：利用偏序集$\langle S, \preccurlyeq \rangle$，如果$\forall x, y \in S, \{x,y\}$都有最小上界和最大下界，则称$S$关于偏序$\preccurlyeq$做出一个格。$x$和$y$有$\vee, \wedge$两个运算，其中$\vee$表示最小上界，$\wedge$表示最大下届。其中运算$\vee, \wedge$还要满足交换律，结合律，幂等律，吸收律$a(a\vee b) = a,a(a\wedge b)=a$。</li><li>格的等价定义：设$\langle L,<em>,\cdot \rangle$是具有两个二元运算的代数系统，如果$</em>,\cdot$满足交换律，结合律，幂等律，吸收率，则称$\langle L,*,\cdot \rangle$是格。</li><li>判断一个偏序集是否构成格：可以判断每两个元素的最小上界跟最大下界是否唯一，如果不唯一则不构成格。</li><li>分配格：$L$是分配格当且仅当$L$不含与砖石格或者五角格同构的子格。或者当且仅当$\forall a,b,c \in L$有$(a\vee b = a\vee c 且a\wedge b=a\wedge c)$$\rightarrow (b=c)$。特别的小于$5$元的格，链都是分配格。</li><li>设$\langle L, \wedge,\vee,0,1\rangle$是有界格，$a\in L$, 若存在$b\in L$使得$a\vee b =1$和$a\wedge b=0$成立则称$b$是$a$的补元。若$L$是有界分配格，则若$L$中的元素存在补元，则只存在唯一的补元。若$L$中所有的元素都存在补元，则称$L$为有补格。</li><li>如果一个格是有补分配格，则称它为布尔格或者布尔代数，记作$\langle L, \wedge,\vee,0,1,’\rangle$，任何有限布尔代数的元素的个数都是$2^n$。有$(a’)’=a$，还有德摩根律。</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;图论&quot;&gt;&lt;a href=&quot;#图论&quot; class=&quot;headerlink&quot; title=&quot;图论&quot;&gt;&lt;/a&gt;图论&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;零图：$E = ∅$，即只有顶点，没有边的图。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;平凡图：只有一个顶点（也称$1$阶图）的零图。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;悬挂顶点：度数为$1$的顶点；悬挂边：与悬挂顶点关联的边。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在无向图中，图的最大度：$∆(G)={d(v)|v\in V}$，其中$V$表示顶点集，$d(v)$表示顶点的度数，记住用$\Delta(G)$去表示最大度；同理图的最小度的定义易得，注意的是我们用$\delta(G)$表示图的最小度。另外无向图用$(v_n,v_m)$表示边。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在有向图中，$v$的入度$d^+(v)$，$v$的出度$d^-(v)$，$v$的度数$d(v) = d^+(v)+d^-(v)$，同时有向图还定义了出度、入度的最大度和最小度。有向图用$\langle v_n,v_m \rangle$表示边。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;握手定理：图的所有顶点的度数之和等于边数的$2$倍，因为每条边都提供$2$度，所以度数之和一定是偶数。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;度数列：$V=\{v_1,v_2,…v_n\}$，$G$的度数列：$d(v_1),d(v_2),…,d(v_n)$。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;简单图：既无平行边也无环的图称为简单图。其中平行边的条数称为重数。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;完全图和正则图：无向完全图，记作$K_n$，边数为$n(n-1)/2$，有向完全图，边数为$n(n-1)$；$k-$正则图：每个顶点的度数均为$k$的无向简单图。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;子图：生成子图：$V’ = V$且$G’\subseteq G$；$V’$的导出子图，以两端点都在$V’$中所有的边集的子图，记作$G[V’]$；$E’$的导出子图：以$E’$所以关联的顶点为顶点集的子图，记作$G[E’]$。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;通路：$Γ = v_0e_1v_1e_2…e_lv_l$ ，称$Γ $为$v_0$到$v_l$的通路，$l$为通路的长度，若$v_0=v_l$则称$Γ $为回路。若通路（回路）中所有顶点（对于回路，$v_0=v_l$）各异，称此通路&lt;strong&gt;初级通路（回路）&lt;/strong&gt;；若通路中所有的边各异，则称为简单通路。初级通路是简单通路，反之不然。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;$Γ$的表示方法 ：用顶点和边交替序列、用边序列、简单图中用顶点序列。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;连通分支：设$R$是$G$中顶点之间的连通关系，按$R$可将$V(G)$划分为$k$个等价类，记作$V_1,V_2,…,V_k$，由他们的导出子图$G[V_1],G[V_2],…,G[V_k]$称为$G$的连通分支。令$p(G)=k$表示$G$的连通分支数为$k$。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;点割集与边割集：若$V’ \subset V$，$p(V-V’)&amp;gt;p(V)$，且$\forall V’’ \subset V$，$p(V-V’’) = V$，则称$V’$为$G$的点割集，若点割集只有一个点，则称此顶点为割点；同理可以得到边割集的定义，若边割集只有一条边则称此边为割边或桥。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;点连通度和边连通度：记$min\{|V’| \space | V’$是$G$的点割集$\}=\kappa(G)$，称为$G$的点连通度；记$min\{|E’| \space|E’$是$G$的边割集$\} = \lambda(G)$，称为$G$的边连通度。对于任意的无向图有$\kappa(G)\leq \lambda(G)\leq \delta(G)$ 。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;二部图判别定理：无向图$G=\langle V,E\rangle$是二部图当且仅当$G$中无奇数长度的回路，记作$\langle V_1,V_2,E\rangle$。二部图还有一个非常重要的匹配问题，匹配就是$E’ \subseteq E$，且$E’$中的边互补相邻，注意极大匹配，最大匹配，完备匹配，完美匹配等问题。&lt;/p&gt;
    
    </summary>
    
    
      <category term="数学" scheme="http://liaozhifeng.gitee.io/categories/%E6%95%B0%E5%AD%A6/"/>
    
    
  </entry>
  
  <entry>
    <title>最近的一些事情与想法</title>
    <link href="http://liaozhifeng.gitee.io/2020/10/17/some-puzzles-in-these-day/"/>
    <id>http://liaozhifeng.gitee.io/2020/10/17/some-puzzles-in-these-day/</id>
    <published>2020-10-17T12:04:57.000Z</published>
    <updated>2020-12-22T05:47:37.015Z</updated>
    
    <content type="html"><![CDATA[<p>本来应该是决定国庆放假时要写写的，重新打开的时候已经是10月17号了，时间真的过的是超级快的，这学期好像就要过去了🤒。</p><p>主要是这学期的课真的蛮多的，作业有些也很难，所以这学期都没怎么更过博客（也没有学到什么东西好更新的吧），其实课倒也不是说很难吧，就是时间太少了，被一个qt作业拖了好多时间，好在这周应该能大致完成，虽然有许多功能还没有实现吧，但是感觉再写下去能写一个月，就先上传到github上，以后或许大三有空能去完善下。之前是很喜欢图像界面，写了这个作业后发现图像界面好难呀，还要去考虑一些样式，以前写控制台直接写功能就好了。</p><p>然后这个作业写完后，我下星期就先不学其他东西，花一个星期认真写写作业，补一下课程的进度，特别是大物，好久都没学了。</p><p>接下来的一些学习计划，再认真的学一下html，css，js三剑客，然后进一步学习vue.js，学三剑客时可以做一些小界面、小项目。学vue是为了不想之前一样，没有学习路线，学了东西后，没有用就忘记了。这学期貌似还是看不完《算法导论》，看不完过年不回家了（看来真的看不完了）。就以后中午不回宿舍了，呆在教室能看一点是一点，然后每周日的下午也都用来学这个，希望我能在这本书中有所收获吧。</p><p>最近真的是发生了很多事情，虽然很多事情我了解的也不够，但还是挺让我不开心的，以后还是要学着辩证的看这个社会，不要被人乱用自己的怜悯之心。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本来应该是决定国庆放假时要写写的，重新打开的时候已经是10月17号了，时间真的过的是超级快的，这学期好像就要过去了🤒。&lt;/p&gt;
&lt;p&gt;主要是这学期的课真的蛮多的，作业有些也很难，所以这学期都没怎么更过博客（也没有学到什么东西好更新的吧），其实课倒也不是说很难吧，就是时间太
      
    
    </summary>
    
    
      <category term="杂想" scheme="http://liaozhifeng.gitee.io/categories/%E6%9D%82%E6%83%B3/"/>
    
    
  </entry>
  
  <entry>
    <title>一些想法</title>
    <link href="http://liaozhifeng.gitee.io/2020/08/16/%E4%B8%80%E4%BA%9B%E6%83%B3%E6%B3%95/"/>
    <id>http://liaozhifeng.gitee.io/2020/08/16/%E4%B8%80%E4%BA%9B%E6%83%B3%E6%B3%95/</id>
    <published>2020-08-16T12:47:45.000Z</published>
    <updated>2020-08-17T08:50:07.103Z</updated>
    
    <content type="html"><![CDATA[<p>其实一直都想写些什么，表达一下我的一些想法，但又总是被各种各样的事情耽搁了，想法也就断了，不知道从何开始表诉。昨天晚上看cba总决赛，看到阿联受伤了，今天大概是确认跟腱撕裂了，我想我还是有必要来写点东西吧。</p><a id="more"></a><p>跟腱撕裂对一个篮球运动员来说无疑是噩梦，这意味着即使能够完全恢复，你的爆发力，弹跳能力也会大不如前。看到阿联倒下去，摸着跟腱，其实或多或少已经猜到了结局，阿联也该卸下他的担子，让下一代人前行了。记得里约奥运会，男篮小组赛被淘汰出局时，记得记者与阿联聊的是19年的世界杯，东京的奥运会，记者想表达的是中国男篮有光明的未来，可阿联说的是都以为未来很长，其实一晃就过去了。确实，世界杯的离奇出局，奥运会也无法入选，中国男篮与其他国家的差距好像也越来越远了。总是想着有以后不去努力，其实时间真的走的飞快，就好像总想着有明天，然后明天继续拖，一晃可能重要的事情就过去了。</p><p>感觉男生可能很多都很喜欢看比赛，那种比赛带来的激情总能让我也心潮澎湃。我从08年就有开始看中国男篮了，那时候阿联还是一年轻小伙，没想到都过去了12年了，我也算开开心心地走过了这10多年，快来到多年前幻想的年纪了。以前遇到不开心的事时，都会在想以后工作了，有新的生活了，然后就很激动。到了现在，对工作的期待也不像之前那么猛烈，大概我最根本的想法是逃离现状，期待以后有更好的生活吧。</p><p>从小我就因为牙齿，被别人嘲笑挺多的，所以现在我好像对很多事情渐渐没了想法。其实我是一个很有表现欲的人，但很多时候想到自己的牙齿就会压制住内心的想法，本来可以更好却无法更好，有时候也是会很不开心的。然后呢，我从小好像也没有什么叛逆的想法，好像一直是一个认真学习的好学生，没有做过什么特殊的事情，按部就班的小学，初中，高中，大学，只是想要考的学校一个接一个的都考不上。小时候总以为我有超能力，可以控制下雨，控制车辆的行走，只不过后来的求学生涯，让我渐渐的认识到我只是一个很很很普通的人罢了。以为我在写作文很强，结果每一次都是40多一点，没有什么思想深度，自然写不出好文章的；高中时拼命的做题，成绩也一直很一般，可能是方法不对吧，也可能自己的能力就那样，幸好努力好像也算一种天赋，我才能勉强勉强不那么普通。</p><p>高二时，能因为一个自我安慰的理由拼命的学习，现在想想虽然有些好笑，但是我也找不回当时的激情了，有什么值得拼命的东西真好，希望大家都能拥有想守护一生的人。高三就过的平平常常，想说的话可能没机会说出口了，有些人真的是不知不觉已经见过了最后一面了。其实好像也没什么特别的事好说吧，所以写的挺乱的，如果有人看到，希望我的情绪不要影响你们。定几个以后的目标吧：</p><ul><li>对身边的人好一点，别老发脾气</li><li>改掉拖延症，勇敢一点</li><li>不卑不亢，自己其实已经很好了</li><li>每天开心，努力</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;其实一直都想写些什么，表达一下我的一些想法，但又总是被各种各样的事情耽搁了，想法也就断了，不知道从何开始表诉。昨天晚上看cba总决赛，看到阿联受伤了，今天大概是确认跟腱撕裂了，我想我还是有必要来写点东西吧。&lt;/p&gt;
    
    </summary>
    
    
      <category term="杂想" scheme="http://liaozhifeng.gitee.io/categories/%E6%9D%82%E6%83%B3/"/>
    
    
  </entry>
  
  <entry>
    <title>大一总结以及未来的规划</title>
    <link href="http://liaozhifeng.gitee.io/2020/07/20/%E5%A4%A7%E4%B8%80%E6%80%BB%E7%BB%93%E4%BB%A5%E5%8F%8A%E6%9C%AA%E6%9D%A5%E7%9A%84%E8%A7%84%E5%88%92/"/>
    <id>http://liaozhifeng.gitee.io/2020/07/20/%E5%A4%A7%E4%B8%80%E6%80%BB%E7%BB%93%E4%BB%A5%E5%8F%8A%E6%9C%AA%E6%9D%A5%E7%9A%84%E8%A7%84%E5%88%92/</id>
    <published>2020-07-20T06:15:18.582Z</published>
    <updated>2020-07-22T16:28:19.660Z</updated>
    
    <content type="html"><![CDATA[<p>时间过的真是很快，特别是在家混了一个学期，大一就这样过去了，也是很久没有写博客了，趁着最近心情不是很好 <del>打游戏总是输</del> ，就写一下大一学了什么吧。</p><a id="more"></a><h3 id="入学"><a href="#入学" class="headerlink" title="入学"></a>入学</h3><p>暑期时，我有看了<strong>一点</strong>翁恺老师的c语言教程，入学时还算有点基础吧（只是看到for循环好像）。军训结束后<del>想起来军训过的还是很开心的，虽然太阳很大</del>，我们学院的王立斌老师来介绍他组织的图灵班。第一节课去的时候，讲的是输出格式化，这个还算听的懂吧。结果第二节课就直接讲起了指针和二级指针，听得我一头雾水，交作业也要求要用函数<del>那时候我连什么是函数都不知道</del>，后面还是退出了，只要是因为我学得太慢了吧。</p><h3 id="大一上的一些课程"><a href="#大一上的一些课程" class="headerlink" title="大一上的一些课程"></a>大一上的一些课程</h3><p>大一上学期最难的应该是线代吧，我直到期末才有点懂得线代的用处，结果现在又忘了，以后再找机会二刷吧。编程方面主要就学了c语言吧，看的是谭浩强的书<del>这书真的不行</del>，而且我要吐槽一下，我们学院教的也太慢了吧，练指针都还没教，没有那种逼着我们跑的感觉，所以我学的也很慢，不过我倒是自己看了一部分的数据结构，那时候对指针理解不够，所以看到二叉树的遍历就看不下了，现在好多也忘了，学了就忘是真的烦😥。上学期算学的很少吧，参加了很多比赛也都没有拿奖，真的挺伤心的，感觉我主要的原因是很难静下心来，学着学着就想跑出去玩，所以上学期坐了几百块的地铁，而且什么都想学，又只学了一点点，就搁置了，因为又有其他的事情需要去做。比如上学期参加了ctf新生赛，算是一个人参加的吧，忙活了几天后，没有拿奖，真的那时候我什么都不懂，然后比赛结束后，我也没有继续学习了，就把本来通过这次比赛学的<strong>一点点</strong>知识也扔掉了，害！我感觉这是一个很致命的问题，学习一个知识后，应该继续深入学习，然后再与现阶段学习的内容贯通，最后能够做点东西出来，才算有用吧。</p><h3 id="寒假"><a href="#寒假" class="headerlink" title="寒假"></a>寒假</h3><p>寒假时，刷了很多acm的题，接触了挺多算法的，已经能熟悉的用深搜了，也开始学习动态规划了，但是后面一开学，我又开始搁置了<del>接受不了.jpg</del> 。现在算是又忘的差不多了吧，老毛病了，感觉要每天都做一些才能不忘记，不然真的挺容易不想继续，就慢慢搁了，因为每天都会有各种各样的事，而且我也挺懒的哈。寒假还学了一下小程序，也是学得差不多就搁置了，不过我找到了一个<a href="https://www.bilibili.com/video/BV1sx411z77P?from=search&amp;seid=6116369401220262130" target="_blank" rel="noopener">非常好的教程</a>，算把小程序的怎么开发讲得非常好了，结合微信开发文档，如果以后要开发我还是很有信心做好的。</p><h3 id="大一下"><a href="#大一下" class="headerlink" title="大一下"></a>大一下</h3><p>这学期算学了很多内容吧，高数下比上难了好多，学了C++面向对象，也做了一个很多行的大作业，C++算学的还可以，只是对C++11还不是很掌握，本来打算暑假继续学习C++的，现在也不知道要往什么方向学习，害。这学期算学得不多吧，还在一个打基础的阶段，等离散跟概率论都学完，我就会加快步伐的。</p><h3 id="接下来的安排"><a href="#接下来的安排" class="headerlink" title="接下来的安排"></a>接下来的安排</h3><ul><li>准备数学建模</li><li>继续学习《算法导论》</li><li>c#图像识别入门（申请的项目要求的）</li><li>下学期可能会申请当兼助，做点有意义的事</li></ul><p>下次再来写写最近的感悟，不涉及技术方面的。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;时间过的真是很快，特别是在家混了一个学期，大一就这样过去了，也是很久没有写博客了，趁着最近心情不是很好 &lt;del&gt;打游戏总是输&lt;/del&gt; ，就写一下大一学了什么吧。&lt;/p&gt;
    
    </summary>
    
    
      <category term="杂想" scheme="http://liaozhifeng.gitee.io/categories/%E6%9D%82%E6%83%B3/"/>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://liaozhifeng.gitee.io/2020/05/16/hello-world/"/>
    <id>http://liaozhifeng.gitee.io/2020/05/16/hello-world/</id>
    <published>2020-05-16T08:04:50.038Z</published>
    <updated>2020-07-22T15:31:25.495Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
      <category term="技术" scheme="http://liaozhifeng.gitee.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>&#39;魔兽世界3备战&#39;</title>
    <link href="http://liaozhifeng.gitee.io/2020/05/13/%E9%AD%94%E5%85%BD%E4%B8%96%E7%95%8C/"/>
    <id>http://liaozhifeng.gitee.io/2020/05/13/%E9%AD%94%E5%85%BD%E4%B8%96%E7%95%8C/</id>
    <published>2020-05-12T17:18:05.000Z</published>
    <updated>2021-01-22T06:33:19.297Z</updated>
    
    <content type="html"><![CDATA[<p>这个题目，我花了差不多4天才全部做出来的，一开始也没很好的设计，就是看见有什么功能，就写一个函数的声明，然后写另一个类的时候，发现我要用到前面写的类的函数时，才去定义相应的函数，所以可能会很混乱。我写这篇文章一是为了重新理一下思路，也希望能给后面设计的人一个想法吧。</p><a id="more"></a><p>首先我大体上设置了5个类吧，不包括相应的子类，分别是factorial（工厂类）、headquarter（司令部类，其实叫做城市类更好）、time（时间类，用来管理时间和大部分的输出的）、warrior（武士类，这道题中最重要的类）、weapon（武器类）。先从最重要的开始吧。</p><ul><li><p>warrior</p><p>武士有生命值(life)、编号（serial 注意这个编号是从1开始算的，每制造一个武士编号就相应的加一，而且并不会因为删除前面的武士而改变）、攻击力（damage，由司令部决定，但具体的规则不同，可以由不同的子类传进去）、位置（location，用来记录武士现在所在的位置，用于打架与移动）、武器的数量数组（WeaponNum，静态数组用来储存不同武器的数量），名字（用来存储子类不同的名字）colorname（隶属司令部的颜色）、武器（这里使用一个vector数组，放武士拥有的武器）。武士有两个重要的方法一个是抢武器，一个是用武器。</p></li><li><p>weapon</p><p>武器有攻击力，武器的编号，剩余的使用次数，还有使用string存储它的名字。武器最终要的是ninja武士使用bomb不会自残，我的做法是使用一个使用武器的方法，并把武士作为形参传进来。</p></li><li><p>factorial</p><p>这个类听从了hhy老师的建议，使用了了静态函数负责制造武士和制造武器，但是我现在的工厂类没有任何数据成员，所以我还是不知道为什么不使用普通的函数，或许可以给工厂多一些功能，比如一个静态成员去记录现在的武士武器编号？？</p></li><li><p>time</p><p>用于对于处理各种事件并输出，主要要总的输出时间和现在的时间，可以包括小时与分钟，也可以只包括小时。这个类的方法大致于题目不同时刻的事件相同，有制造武士，武士逃跑，武士前进，同一个城市的武士抢武器，打架，司令部报告，武士报告。对于武士我的处理方法是先按司令部全部遍历都前进一步，在根据城市的顺序从左到右输出，或许可以全部由城市来负责。</p></li><li><p>headquarters</p><p>司令部是继承普通的city类来着，司令部有总的生命值，制造武士的顺序，各个武士的攻击力和所需要的生命（或许这两个就可以放置在factorial类中作为静态成员），还需要一个vector用来记录司令部的士兵。</p></li></ul><p>类的介绍就差不多是这样了，删除武士删除武器的操作，或许都可以由factorial来实现，把功能给对应的类吧，不过这样好像要写成模板函数了。</p><hr><p>最后再说一下可能会遇到的一些坑吧。</p><p>武士打架时，在奇数城市红方先攻击，偶数城市蓝方先攻击  </p><p>武器的攻击力会随使用者的改变而发生改变，<strong>所以在抢夺武器时记得要给一个接口去改变武器的攻击力</strong></p><p>Wolf的抢夺武器与打赢后抢夺武器是不一样的，wolf只抢劫一种（编号最小的武器），而打赢之后进行的抢劫，所有的武器都能抢。</p><p>关于删除武器，武士的erase，erase最好写一个函数，参数传递要删除的对应指针（容器里面放的是指针嘛），erase的参数都是迭代器，推荐使用for循环找到要删除指针对应的迭代器。</p><p> 注意iceman前进一步损失10%的生命值，表示的方式是<script type="math/tex">life-life*10%</script>,而不是<script type="math/tex">life*90%</script></p><p>移动的输出顺序是按目的地从西向东的，我的做法是先全部移动，再按city输出相应的信息</p><p>如果武士用一个数组去存储武器的数量，另外还有如果wolf抢劫了敌人的武器记得把敌人数组的数量减掉，武士的数组加相应的值。</p><p>还有一个非常坑的点，在打架时，假如两个都剩余一件sword的攻击力为0，或者有一个没有武器，都会进行入死循环。但是其他两种武器是有使用次数的就每关系。</p><p>耳聋咆哮是活下来就要的，不是赢了才。</p><hr><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br><span class="line">777</span><br><span class="line">778</span><br><span class="line">779</span><br><span class="line">780</span><br><span class="line">781</span><br><span class="line">782</span><br><span class="line">783</span><br><span class="line">784</span><br><span class="line">785</span><br><span class="line">786</span><br><span class="line">787</span><br><span class="line">788</span><br><span class="line">789</span><br><span class="line">790</span><br><span class="line">791</span><br><span class="line">792</span><br><span class="line">793</span><br><span class="line">794</span><br><span class="line">795</span><br><span class="line">796</span><br><span class="line">797</span><br><span class="line">798</span><br><span class="line">799</span><br><span class="line">800</span><br><span class="line">801</span><br><span class="line">802</span><br><span class="line">803</span><br><span class="line">804</span><br><span class="line">805</span><br><span class="line">806</span><br><span class="line">807</span><br><span class="line">808</span><br><span class="line">809</span><br><span class="line">810</span><br><span class="line">811</span><br><span class="line">812</span><br><span class="line">813</span><br><span class="line">814</span><br><span class="line">815</span><br><span class="line">816</span><br><span class="line">817</span><br><span class="line">818</span><br><span class="line">819</span><br><span class="line">820</span><br><span class="line">821</span><br><span class="line">822</span><br><span class="line">823</span><br><span class="line">824</span><br><span class="line">825</span><br><span class="line">826</span><br><span class="line">827</span><br><span class="line">828</span><br><span class="line">829</span><br><span class="line">830</span><br><span class="line">831</span><br><span class="line">832</span><br><span class="line">833</span><br><span class="line">834</span><br><span class="line">835</span><br><span class="line">836</span><br><span class="line">837</span><br><span class="line">838</span><br><span class="line">839</span><br><span class="line">840</span><br><span class="line">841</span><br><span class="line">842</span><br><span class="line">843</span><br><span class="line">844</span><br><span class="line">845</span><br><span class="line">846</span><br><span class="line">847</span><br><span class="line">848</span><br><span class="line">849</span><br><span class="line">850</span><br><span class="line">851</span><br><span class="line">852</span><br><span class="line">853</span><br><span class="line">854</span><br><span class="line">855</span><br><span class="line">856</span><br><span class="line">857</span><br><span class="line">858</span><br><span class="line">859</span><br><span class="line">860</span><br><span class="line">861</span><br><span class="line">862</span><br><span class="line">863</span><br><span class="line">864</span><br><span class="line">865</span><br><span class="line">866</span><br><span class="line">867</span><br><span class="line">868</span><br><span class="line">869</span><br><span class="line">870</span><br><span class="line">871</span><br><span class="line">872</span><br><span class="line">873</span><br><span class="line">874</span><br><span class="line">875</span><br><span class="line">876</span><br><span class="line">877</span><br><span class="line">878</span><br><span class="line">879</span><br><span class="line">880</span><br><span class="line">881</span><br><span class="line">882</span><br><span class="line">883</span><br><span class="line">884</span><br><span class="line">885</span><br><span class="line">886</span><br><span class="line">887</span><br><span class="line">888</span><br><span class="line">889</span><br><span class="line">890</span><br><span class="line">891</span><br><span class="line">892</span><br><span class="line">893</span><br><span class="line">894</span><br><span class="line">895</span><br><span class="line">896</span><br><span class="line">897</span><br><span class="line">898</span><br><span class="line">899</span><br><span class="line">900</span><br><span class="line">901</span><br><span class="line">902</span><br><span class="line">903</span><br><span class="line">904</span><br><span class="line">905</span><br><span class="line">906</span><br><span class="line">907</span><br><span class="line">908</span><br><span class="line">909</span><br><span class="line">910</span><br><span class="line">911</span><br><span class="line">912</span><br><span class="line">913</span><br><span class="line">914</span><br><span class="line">915</span><br><span class="line">916</span><br><span class="line">917</span><br><span class="line">918</span><br><span class="line">919</span><br><span class="line">920</span><br><span class="line">921</span><br><span class="line">922</span><br><span class="line">923</span><br><span class="line">924</span><br><span class="line">925</span><br><span class="line">926</span><br><span class="line">927</span><br><span class="line">928</span><br><span class="line">929</span><br><span class="line">930</span><br><span class="line">931</span><br><span class="line">932</span><br><span class="line">933</span><br><span class="line">934</span><br><span class="line">935</span><br><span class="line">936</span><br><span class="line">937</span><br><span class="line">938</span><br><span class="line">939</span><br><span class="line">940</span><br><span class="line">941</span><br><span class="line">942</span><br><span class="line">943</span><br><span class="line">944</span><br><span class="line">945</span><br><span class="line">946</span><br><span class="line">947</span><br><span class="line">948</span><br><span class="line">949</span><br><span class="line">950</span><br><span class="line">951</span><br><span class="line">952</span><br><span class="line">953</span><br><span class="line">954</span><br><span class="line">955</span><br><span class="line">956</span><br><span class="line">957</span><br><span class="line">958</span><br><span class="line">959</span><br><span class="line">960</span><br><span class="line">961</span><br><span class="line">962</span><br><span class="line">963</span><br><span class="line">964</span><br><span class="line">965</span><br><span class="line">966</span><br><span class="line">967</span><br><span class="line">968</span><br><span class="line">969</span><br><span class="line">970</span><br><span class="line">971</span><br><span class="line">972</span><br><span class="line">973</span><br><span class="line">974</span><br><span class="line">975</span><br><span class="line">976</span><br><span class="line">977</span><br><span class="line">978</span><br><span class="line">979</span><br><span class="line">980</span><br><span class="line">981</span><br><span class="line">982</span><br><span class="line">983</span><br><span class="line">984</span><br><span class="line">985</span><br><span class="line">986</span><br><span class="line">987</span><br><span class="line">988</span><br><span class="line">989</span><br><span class="line">990</span><br><span class="line">991</span><br><span class="line">992</span><br><span class="line">993</span><br><span class="line">994</span><br><span class="line">995</span><br><span class="line">996</span><br><span class="line">997</span><br><span class="line">998</span><br><span class="line">999</span><br><span class="line">1000</span><br><span class="line">1001</span><br><span class="line">1002</span><br><span class="line">1003</span><br><span class="line">1004</span><br><span class="line">1005</span><br><span class="line">1006</span><br><span class="line">1007</span><br><span class="line">1008</span><br><span class="line">1009</span><br><span class="line">1010</span><br><span class="line">1011</span><br><span class="line">1012</span><br><span class="line">1013</span><br><span class="line">1014</span><br><span class="line">1015</span><br><span class="line">1016</span><br><span class="line">1017</span><br><span class="line">1018</span><br><span class="line">1019</span><br><span class="line">1020</span><br><span class="line">1021</span><br><span class="line">1022</span><br><span class="line">1023</span><br><span class="line">1024</span><br><span class="line">1025</span><br><span class="line">1026</span><br><span class="line">1027</span><br><span class="line">1028</span><br><span class="line">1029</span><br><span class="line">1030</span><br><span class="line">1031</span><br><span class="line">1032</span><br><span class="line">1033</span><br><span class="line">1034</span><br><span class="line">1035</span><br><span class="line">1036</span><br><span class="line">1037</span><br><span class="line">1038</span><br><span class="line">1039</span><br><span class="line">1040</span><br><span class="line">1041</span><br><span class="line">1042</span><br><span class="line">1043</span><br><span class="line">1044</span><br><span class="line">1045</span><br><span class="line">1046</span><br><span class="line">1047</span><br><span class="line">1048</span><br><span class="line">1049</span><br><span class="line">1050</span><br><span class="line">1051</span><br><span class="line">1052</span><br><span class="line">1053</span><br><span class="line">1054</span><br><span class="line">1055</span><br><span class="line">1056</span><br><span class="line">1057</span><br><span class="line">1058</span><br><span class="line">1059</span><br><span class="line">1060</span><br><span class="line">1061</span><br><span class="line">1062</span><br><span class="line">1063</span><br><span class="line">1064</span><br><span class="line">1065</span><br><span class="line">1066</span><br><span class="line">1067</span><br><span class="line">1068</span><br><span class="line">1069</span><br><span class="line">1070</span><br><span class="line">1071</span><br><span class="line">1072</span><br><span class="line">1073</span><br><span class="line">1074</span><br><span class="line">1075</span><br><span class="line">1076</span><br><span class="line">1077</span><br><span class="line">1078</span><br><span class="line">1079</span><br><span class="line">1080</span><br><span class="line">1081</span><br><span class="line">1082</span><br><span class="line">1083</span><br><span class="line">1084</span><br><span class="line">1085</span><br><span class="line">1086</span><br><span class="line">1087</span><br><span class="line">1088</span><br><span class="line">1089</span><br><span class="line">1090</span><br><span class="line">1091</span><br><span class="line">1092</span><br><span class="line">1093</span><br><span class="line">1094</span><br><span class="line">1095</span><br><span class="line">1096</span><br><span class="line">1097</span><br><span class="line">1098</span><br><span class="line">1099</span><br><span class="line">1100</span><br><span class="line">1101</span><br><span class="line">1102</span><br><span class="line">1103</span><br><span class="line">1104</span><br><span class="line">1105</span><br><span class="line">1106</span><br><span class="line">1107</span><br><span class="line">1108</span><br><span class="line">1109</span><br><span class="line">1110</span><br><span class="line">1111</span><br><span class="line">1112</span><br><span class="line">1113</span><br><span class="line">1114</span><br><span class="line">1115</span><br><span class="line">1116</span><br><span class="line">1117</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//最后附上代码，可能有很多功能没有分离好，导致接口写的太多了</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iomanip&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">factorial</span>;</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Time</span>;</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">headquarter</span>;</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">city</span>;</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">warrior</span>;</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">weapon</span>;</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">factorial</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">//l表示武士的生命，L表示武士的位置，s表示武士的标号，choice确定选择哪一个武士</span></span><br><span class="line"><span class="comment">//需要的变量哪一个武士,武士的各种信息</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> warrior* <span class="title">creator_warrior</span><span class="params">(<span class="keyword">int</span> choice, <span class="keyword">int</span> s, <span class="keyword">int</span> life, <span class="keyword">int</span> L, <span class="keyword">int</span> total, <span class="keyword">int</span>, <span class="keyword">int</span>*, <span class="keyword">int</span>)</span></span>;</span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">creator_weapon</span><span class="params">(<span class="keyword">int</span> attack, <span class="keyword">int</span> seria, <span class="keyword">int</span> num, <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;weapon*&gt;&amp;d, <span class="keyword">int</span> *)</span></span>;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">warrior</span>;</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">city</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line"><span class="keyword">int</span> location;</span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">vector</span>&lt;warrior*&gt; qwarriors;<span class="comment">//用来占领存放武士的容器</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">city(<span class="keyword">int</span> l = <span class="number">0</span>) :location(l)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add_qwarriors</span><span class="params">(warrior *)</span></span>;</span><br><span class="line"><span class="function"><span class="built_in">std</span>::<span class="built_in">vector</span>&lt;warrior*&gt; &amp;<span class="title">show_qwarriors</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> qwarriors;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">city_delete</span><span class="params">(warrior *)</span></span>;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">headquarter</span> :</span><span class="keyword">public</span> city</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="keyword">int</span> TotalLife;<span class="comment">//司令部总的生命元</span></span><br><span class="line"><span class="keyword">char</span> name[<span class="number">7</span>];<span class="comment">//司令部的名字</span></span><br><span class="line"><span class="keyword">int</span> makeseq[<span class="number">5</span>];<span class="comment">//制造武士的顺序</span></span><br><span class="line"><span class="keyword">int</span> LifeNeed[<span class="number">5</span>];<span class="comment">//把制造武士所需的生命元也放在类里</span></span><br><span class="line"><span class="keyword">int</span> WarriorAttack[<span class="number">5</span>];</span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">vector</span>&lt;warrior*&gt; warriors;<span class="comment">//用来存放武士的容器</span></span><br><span class="line"><span class="keyword">bool</span> WheatherCreate = <span class="literal">true</span>;<span class="comment">//是否可以制造武士</span></span><br><span class="line"><span class="keyword">bool</span> IsContinue = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">int</span> WarriorSeria = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> lionloyalty;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">//t是司令部的生命元，arr是制造武士的顺序，N城市的数量 A是武士攻击力数组</span></span><br><span class="line"><span class="comment">//L是武士的生命值数组</span></span><br><span class="line">headquarter(<span class="keyword">int</span> t, <span class="keyword">int</span> *arr, <span class="keyword">int</span> m, <span class="keyword">int</span> N, <span class="keyword">int</span> *L, <span class="keyword">int</span> *A, <span class="keyword">int</span> Ly) :TotalLife(t),</span><br><span class="line">lionloyalty(Ly)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> n = <span class="number">0</span>; n &lt; <span class="number">5</span>; n++)</span><br><span class="line">&#123;</span><br><span class="line">makeseq[n] = arr[n];</span><br><span class="line">LifeNeed[n] = L[n];</span><br><span class="line">WarriorAttack[n] = A[n];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (m == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">name[<span class="number">0</span>] = <span class="string">'r'</span>;</span><br><span class="line">name[<span class="number">1</span>] = <span class="string">'e'</span>;</span><br><span class="line">name[<span class="number">2</span>] = <span class="string">'d'</span>;</span><br><span class="line">name[<span class="number">3</span>] = <span class="string">'\0'</span>;</span><br><span class="line">location = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (m == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">name[<span class="number">0</span>] = <span class="string">'b'</span>;</span><br><span class="line">name[<span class="number">1</span>] = <span class="string">'l'</span>;</span><br><span class="line">name[<span class="number">2</span>] = <span class="string">'u'</span>;</span><br><span class="line">name[<span class="number">3</span>] = <span class="string">'e'</span>;</span><br><span class="line">name[<span class="number">4</span>] = <span class="string">'\0'</span>;</span><br><span class="line">location = N + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">getnextMakeValidWarriorKind</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (TotalLife &gt;= LifeNeed[makeseq[warriors.<span class="built_in">size</span>() % <span class="number">5</span>]])<span class="comment">//</span></span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">delete_warrior</span><span class="params">(warrior *)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">produce</span><span class="params">(<span class="keyword">int</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">is_continue</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> IsContinue;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="built_in">std</span>::<span class="built_in">vector</span>&lt;warrior*&gt;&amp;  <span class="title">get_warrios</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> warriors;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">get_totalife</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> TotalLife;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">get_location</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> location;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">get_name</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> name;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Been_Token</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">IsContinue = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Time</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="keyword">int</span> TotalTime;</span><br><span class="line"><span class="keyword">bool</span> is_continue = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">int</span> NowTime = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">Time(<span class="keyword">int</span> t) :TotalTime(t)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//如果是武士的行为就需要引用司令部，武器的行为需要引用武士</span></span><br><span class="line"><span class="comment">//因为一个司令部有很多武士，一个武士有很多武器</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">create_event</span><span class="params">(headquarter &amp;a, headquarter &amp;b)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">escape_event</span><span class="params">(headquarter &amp;a, headquarter &amp;b)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">forward_event</span><span class="params">(headquarter &amp;a, headquarter &amp;b, city **)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">rob_event</span><span class="params">(warrior *a, warrior *b, <span class="keyword">int</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">fight_event</span><span class="params">(warrior *a, warrior *b, <span class="keyword">int</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">headquarte_report</span><span class="params">(headquarter &amp;a)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add_nowtime</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">++NowTime;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">get_nowtime</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> NowTime;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">warriors_report</span><span class="params">(warrior *a)</span></span>;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">weapon</span>;</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">warrior</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line"><span class="keyword">int</span> life;<span class="comment">//武士的生命</span></span><br><span class="line"><span class="keyword">int</span> seria;<span class="comment">//武士的编号</span></span><br><span class="line"><span class="keyword">int</span> damage;<span class="comment">//武士的攻击力</span></span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">vector</span>&lt;weapon *&gt;weapons;<span class="comment">//用来存放武器的优先队列</span></span><br><span class="line"><span class="keyword">int</span> location;<span class="comment">//现在的位置</span></span><br><span class="line"><span class="keyword">int</span> WeaponsNum[<span class="number">3</span>] = &#123;&#125;;</span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">string</span> name;</span><br><span class="line"><span class="keyword">int</span> HqtName;<span class="comment">//所属司令部的名字,0表示red,1表示blue</span></span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">string</span> colorname;<span class="comment">//没办法了，真的需要这个</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">warrior(<span class="keyword">int</span> l = <span class="number">0</span>, <span class="keyword">int</span> s = <span class="number">0</span>, <span class="keyword">int</span> d = <span class="number">0</span>, <span class="keyword">int</span> L = <span class="number">0</span>, <span class="keyword">int</span> r = <span class="number">0</span>, <span class="keyword">int</span> p = <span class="number">0</span>) :life(l),</span><br><span class="line">seria(s), damage(d), location(L), HqtName(p)</span><br><span class="line">&#123;</span><br><span class="line">name = <span class="string">"warrior"</span>;</span><br><span class="line"><span class="keyword">if</span> (p == <span class="number">0</span>)</span><br><span class="line">colorname = <span class="string">"red"</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">colorname = <span class="string">"blue"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="built_in">std</span>::<span class="built_in">vector</span>&lt;weapon*&gt; &amp; <span class="title">get_weapons</span><span class="params">()</span><span class="comment">//返回武士的武器，记得使用引用</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> weapons;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="built_in">std</span>::<span class="built_in">string</span> <span class="title">get_name</span><span class="params">()</span> <span class="keyword">const</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> name;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="built_in">std</span>::<span class="built_in">string</span> <span class="title">get_color</span><span class="params">()</span><span class="keyword">const</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> colorname;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">get_hqt</span><span class="params">()</span> <span class="keyword">const</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> HqtName;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">get_life</span><span class="params">()</span> <span class="keyword">const</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> life;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">get_attack</span><span class="params">()</span> <span class="keyword">const</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> damage;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">change_life</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">life -= n;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">get_loc</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> location;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">get_seria</span><span class="params">()</span> <span class="keyword">const</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> seria;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">report</span><span class="params">(<span class="keyword">int</span> t, <span class="keyword">const</span> <span class="keyword">char</span> *)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">is_die</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (life &lt;= <span class="number">0</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">rob_weapon</span><span class="params">(warrior* enermy)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Delete_weapon</span><span class="params">(weapon *)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">bool</span> <span class="title">is_use_bomb</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">gaming</span><span class="params">(<span class="keyword">int</span> times, <span class="keyword">int</span> &amp;)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">change_weaponnum</span><span class="params">(<span class="keyword">int</span> s)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">--WeaponsNum[s];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">sort_weapons</span><span class="params">()</span></span>;</span><br><span class="line"><span class="comment">//第10分时的移动，每一次在headquarters的warriors都用一次</span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> warrior*  <span class="title">forward</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">location += n;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">before_game</span><span class="params">(warrior* enermy, <span class="keyword">int</span>, <span class="keyword">int</span>)</span><span class="comment">//为了wolf的偷武器而设置的</span></span></span><br><span class="line"><span class="function"></span>&#123;&#125;</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">after_game</span><span class="params">(<span class="keyword">int</span> time, <span class="keyword">int</span> city)</span><span class="comment">//为了dragon的yell而设置的</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">bool</span> <span class="title">is_escape</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">dragon</span> :</span><span class="keyword">public</span> warrior</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">dragon(<span class="keyword">int</span> l = <span class="number">0</span>, <span class="keyword">int</span> s = <span class="number">0</span>, <span class="keyword">int</span> d = <span class="number">0</span>, <span class="keyword">int</span> L = <span class="number">0</span>, <span class="keyword">int</span> r = <span class="number">0</span>, <span class="keyword">int</span> p = <span class="number">0</span>);</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">yell</span><span class="params">(<span class="keyword">int</span>, <span class="keyword">int</span>)</span></span>;</span><br><span class="line"><span class="function">warrior* <span class="title">forward</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">location += n;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">before_game</span><span class="params">(warrior* enermy, <span class="keyword">int</span>, <span class="keyword">int</span>)</span>       <span class="comment">//为了wolf的偷武器而设置的</span></span></span><br><span class="line"><span class="function"></span>&#123;&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">after_game</span><span class="params">(<span class="keyword">int</span> time, <span class="keyword">int</span> city)</span> <span class="comment">//为了dragon的yell而设置的</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">yell(time, city);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">is_escape</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">is_use_bomb</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ninja</span> :</span><span class="keyword">public</span> warrior</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">ninja(<span class="keyword">int</span> l = <span class="number">0</span>, <span class="keyword">int</span> s = <span class="number">0</span>, <span class="keyword">int</span> d = <span class="number">0</span>, <span class="keyword">int</span> L = <span class="number">0</span>, <span class="keyword">int</span> r = <span class="number">0</span>, <span class="keyword">int</span> p = <span class="number">0</span>);</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">is_use_bomb</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">warrior* <span class="title">forward</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">location += n;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">before_game</span><span class="params">(warrior* enermy, <span class="keyword">int</span>, <span class="keyword">int</span>)</span><span class="comment">//为了wolf的偷武器而设置的</span></span></span><br><span class="line"><span class="function"></span>&#123;&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">after_game</span><span class="params">(<span class="keyword">int</span> time, <span class="keyword">int</span> city)</span><span class="comment">//为了dragon的yell而设置的</span></span></span><br><span class="line"><span class="function"></span>&#123;&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">is_escape</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">iceman</span> :</span><span class="keyword">public</span> warrior</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">iceman(<span class="keyword">int</span> l = <span class="number">0</span>, <span class="keyword">int</span> s = <span class="number">0</span>, <span class="keyword">int</span> d = <span class="number">0</span>, <span class="keyword">int</span> L = <span class="number">0</span>, <span class="keyword">int</span> r = <span class="number">0</span>, <span class="keyword">int</span> p = <span class="number">0</span>);</span><br><span class="line"><span class="function">warrior* <span class="title">forward</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">location += n;</span><br><span class="line">life -= life * <span class="number">1</span> / <span class="number">10</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">before_game</span><span class="params">(warrior* enermy, <span class="keyword">int</span>, <span class="keyword">int</span>)</span><span class="comment">//为了wolf的偷武器而设置的</span></span></span><br><span class="line"><span class="function"></span>&#123;&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">after_game</span><span class="params">(<span class="keyword">int</span> time, <span class="keyword">int</span> city)</span><span class="comment">//为了dragon的yell而设置的</span></span></span><br><span class="line"><span class="function"></span>&#123;&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">is_escape</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">is_use_bomb</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">lion</span> :</span><span class="keyword">public</span> warrior</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="keyword">int</span> loyalty;</span><br><span class="line"><span class="keyword">int</span> K;<span class="comment">//每一次行走消耗的忠诚度，命名逐渐暴躁</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">lion(<span class="keyword">int</span> l = <span class="number">0</span>, <span class="keyword">int</span> s = <span class="number">0</span>, <span class="keyword">int</span> d = <span class="number">0</span>, <span class="keyword">int</span> L = <span class="number">0</span>, <span class="keyword">int</span> r = <span class="number">0</span>, <span class="keyword">int</span> p = <span class="number">0</span>, <span class="keyword">int</span> k = <span class="number">0</span>);</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">is_escape</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (loyalty &lt;= <span class="number">0</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">warrior* <span class="title">forward</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">loyalty -= K;</span><br><span class="line">location += n;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">before_game</span><span class="params">(warrior* enermy, <span class="keyword">int</span>, <span class="keyword">int</span>)</span><span class="comment">//为了wolf的偷武器而设置的</span></span></span><br><span class="line"><span class="function"></span>&#123;&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">after_game</span><span class="params">(<span class="keyword">int</span> time, <span class="keyword">int</span> city)</span><span class="comment">//为了dragon的yell而设置的</span></span></span><br><span class="line"><span class="function"></span>&#123;&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">is_use_bomb</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">wolf</span> :</span><span class="keyword">public</span> warrior</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">wolf(<span class="keyword">int</span> l = <span class="number">0</span>, <span class="keyword">int</span> s = <span class="number">0</span>, <span class="keyword">int</span> d = <span class="number">0</span>, <span class="keyword">int</span> L = <span class="number">0</span>, <span class="keyword">int</span> r = <span class="number">0</span>, <span class="keyword">int</span> p = <span class="number">0</span>) :</span><br><span class="line">warrior(l, s, d, L, r, p)</span><br><span class="line">&#123;</span><br><span class="line">name = <span class="string">"wolf"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">warrior* <span class="title">forward</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">location += n;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">before_game</span><span class="params">(warrior* enermy, <span class="keyword">int</span> NoWtime, <span class="keyword">int</span> City)</span><span class="comment">//为了wolf的偷武器而设置的</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">wolf_rob(enermy, NoWtime, City);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">after_game</span><span class="params">(<span class="keyword">int</span> time, <span class="keyword">int</span> city)</span><span class="comment">//为了dragon的yell而设置的</span></span></span><br><span class="line"><span class="function"></span>&#123;&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">is_escape</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">is_use_bomb</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">wolf_rob</span><span class="params">(warrior *, <span class="keyword">int</span>, <span class="keyword">int</span>)</span></span>;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Pair</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">int</span> first;</span><br><span class="line"><span class="keyword">int</span> second;</span><br><span class="line">Pair(<span class="keyword">int</span> f, <span class="keyword">int</span> s) :first(f), second(s) &#123;&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">weapon</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="keyword">int</span> WeaponDamage;<span class="comment">//武器的攻击力</span></span><br><span class="line"><span class="keyword">int</span> WeaponSeria;<span class="comment">//武器的编号，用于后面排序</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">weapon(<span class="keyword">int</span> d, <span class="keyword">int</span> w) :WeaponDamage(d), WeaponSeria(w) &#123;&#125;</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> Pair <span class="title">using_weapon</span><span class="params">(<span class="keyword">int</span> MyDamage)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> Pair(WeaponDamage, MyDamage);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">get_seria</span><span class="params">()</span> <span class="keyword">const</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> WeaponSeria;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">change_damege</span><span class="params">(<span class="keyword">int</span> t)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">WeaponDamage = t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">get_damage</span><span class="params">()</span> <span class="keyword">const</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> WeaponDamage;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">int</span> <span class="title">get_use_times</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">bool</span> <span class="title">is_bad</span><span class="params">()</span> </span>&#123; <span class="keyword">return</span> <span class="literal">false</span>; &#125;<span class="comment">//每次使用武器后就调用这个函数</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">sword</span> :</span><span class="keyword">public</span> weapon</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="keyword">int</span> Availbleuse = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">sword(<span class="keyword">int</span> d = <span class="number">0</span>) :weapon(d * <span class="number">2</span> / <span class="number">10</span>, <span class="number">0</span>) &#123;&#125;</span><br><span class="line"><span class="function">Pair <span class="title">using_weapon</span><span class="params">(<span class="keyword">int</span>)</span> </span>&#123; <span class="keyword">return</span> weapon::using_weapon(<span class="number">0</span>); &#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">get_use_times</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">is_bad</span><span class="params">()</span> </span>&#123; <span class="keyword">return</span> <span class="literal">false</span>; &#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">change_damege</span><span class="params">(<span class="keyword">int</span> t)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">weapon::change_damege(t * <span class="number">2</span> / <span class="number">10</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">bomb</span> :</span><span class="keyword">public</span> weapon</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="keyword">int</span> AvailbleUse = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">bomb(<span class="keyword">int</span> d = <span class="number">0</span>) :weapon(d * <span class="number">4</span> / <span class="number">10</span>, <span class="number">1</span>) &#123;&#125;</span><br><span class="line"><span class="function">Pair <span class="title">using_weapon</span><span class="params">(<span class="keyword">int</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">--AvailbleUse;</span><br><span class="line"><span class="keyword">return</span> weapon::using_weapon(get_damage() / <span class="number">2</span>);</span><br><span class="line">&#125;<span class="comment">//</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">get_use_times</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> AvailbleUse;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">is_bad</span><span class="params">()</span> </span>&#123; <span class="keyword">return</span> <span class="literal">true</span>; &#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">change_damege</span><span class="params">(<span class="keyword">int</span> t)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">weapon::change_damege(t * <span class="number">4</span> / <span class="number">10</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">arrow</span> :</span><span class="keyword">public</span> weapon</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="keyword">int</span> AvailbleUse = <span class="number">2</span>;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">arrow(<span class="keyword">int</span> d = <span class="number">0</span>) :weapon(d * <span class="number">3</span> / <span class="number">10</span>, <span class="number">2</span>) &#123;&#125;</span><br><span class="line"><span class="function">Pair <span class="title">using_weapon</span><span class="params">(<span class="keyword">int</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">--AvailbleUse;</span><br><span class="line"><span class="keyword">return</span> weapon::using_weapon(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">is_bad</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (AvailbleUse == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">get_use_times</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> AvailbleUse;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">change_damege</span><span class="params">(<span class="keyword">int</span> t)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">weapon::change_damege(t * <span class="number">3</span> / <span class="number">10</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//life表示武士的生命，L表示武士的位置，s表示武士的标号，可以用choice确定使用哪一个武士</span></span><br><span class="line"><span class="function">warrior* <span class="title">factorial::creator_warrior</span><span class="params">(<span class="keyword">int</span> choice, <span class="keyword">int</span> s, <span class="keyword">int</span> life, <span class="keyword">int</span> L, <span class="keyword">int</span> total, <span class="keyword">int</span> N, <span class="keyword">int</span> *WarriorAttack,</span></span></span><br><span class="line"><span class="function"><span class="params"><span class="keyword">int</span> K)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">warrior *ptemp;</span><br><span class="line"><span class="keyword">if</span> (choice == <span class="number">0</span>)</span><br><span class="line">ptemp = <span class="keyword">new</span> dragon(life, s, WarriorAttack[choice], L, total, N);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (choice == <span class="number">1</span>)</span><br><span class="line">ptemp = <span class="keyword">new</span> ninja(life, s, WarriorAttack[choice], L, total, N);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (choice == <span class="number">2</span>)</span><br><span class="line">ptemp = <span class="keyword">new</span> iceman(life, s, WarriorAttack[choice], L, total, N);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (choice == <span class="number">3</span>)</span><br><span class="line">ptemp = <span class="keyword">new</span> lion(life, s, WarriorAttack[choice], L, total, N, K);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">ptemp = <span class="keyword">new</span> wolf(life, s, WarriorAttack[choice], L, total, N);</span><br><span class="line"><span class="keyword">return</span> ptemp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//N是武士存放武器的数组</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">factorial::creator_weapon</span><span class="params">(<span class="keyword">int</span> attack, <span class="keyword">int</span> seria, <span class="keyword">int</span> num, <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;weapon*&gt; &amp;d,</span></span></span><br><span class="line"><span class="function"><span class="params"><span class="keyword">int</span> *N)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">weapon * ptemp1;</span><br><span class="line">weapon *ptemp2;</span><br><span class="line"><span class="keyword">if</span> (seria % <span class="number">3</span> == <span class="number">0</span>)</span><br><span class="line">ptemp1 = <span class="keyword">new</span> sword(attack);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (seria % <span class="number">3</span> == <span class="number">1</span>)</span><br><span class="line">ptemp1 = <span class="keyword">new</span> bomb(attack);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">ptemp1 = <span class="keyword">new</span> arrow(attack);</span><br><span class="line"><span class="keyword">if</span> ((seria + <span class="number">1</span>) % <span class="number">3</span> == <span class="number">0</span>)</span><br><span class="line">ptemp2 = <span class="keyword">new</span> sword(attack);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> ((seria + <span class="number">1</span>) % <span class="number">3</span> == <span class="number">1</span>)</span><br><span class="line">ptemp2 = <span class="keyword">new</span> bomb(attack);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">ptemp2 = <span class="keyword">new</span> arrow(attack);</span><br><span class="line"><span class="keyword">if</span> (num == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">d.push_back(ptemp1);</span><br><span class="line">++N[seria % <span class="number">3</span>];</span><br><span class="line"><span class="comment">//在函数里申请空间而不delete也是不会回收的，所以这里要delete ptemp2</span></span><br><span class="line"><span class="keyword">delete</span> ptemp2;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">d.push_back(ptemp1);</span><br><span class="line">++N[seria % <span class="number">3</span>];</span><br><span class="line">d.push_back(ptemp2);</span><br><span class="line">++N[(seria + <span class="number">1</span>) % <span class="number">3</span>];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">city::city_delete</span><span class="params">(warrior *temp)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> t = <span class="number">0</span>; t &lt; qwarriors.<span class="built_in">size</span>(); t++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (qwarriors[t] == temp)</span><br><span class="line">&#123;</span><br><span class="line">qwarriors.erase(qwarriors.<span class="built_in">begin</span>() + t);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">city::add_qwarriors</span><span class="params">(warrior *w)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">qwarriors.push_back(w);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">headquarter::produce</span><span class="params">(<span class="keyword">int</span> time)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (WheatherCreate == <span class="literal">false</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">if</span> (!getnextMakeValidWarriorKind())</span><br><span class="line">&#123;</span><br><span class="line">WheatherCreate = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> N = <span class="built_in">std</span>::<span class="built_in">strlen</span>(get_name()) - <span class="number">3</span>;</span><br><span class="line">TotalLife -= LifeNeed[makeseq[WarriorSeria % <span class="number">5</span>]];</span><br><span class="line">warrior *ptemp = factorial::creator_warrior(makeseq[WarriorSeria % <span class="number">5</span>], WarriorSeria + <span class="number">1</span>,</span><br><span class="line">LifeNeed[makeseq[WarriorSeria % <span class="number">5</span>]], location, TotalLife, N, WarriorAttack, lionloyalty);</span><br><span class="line">warriors.push_back(ptemp);</span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="built_in">std</span>::setfill(<span class="string">'0'</span>) &lt;&lt; <span class="built_in">std</span>::setw(<span class="number">3</span>) &lt;&lt; time;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">":00 %s %s %d born\n"</span>, name, ptemp-&gt;get_name().c_str(), WarriorSeria + <span class="number">1</span>);</span><br><span class="line"><span class="keyword">if</span> (ptemp-&gt;get_name() == <span class="string">"lion"</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Its loyalty is %d\n"</span>, TotalLife);</span><br><span class="line">++WarriorSeria;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">headquarter::delete_warrior</span><span class="params">(warrior *temp)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> t = <span class="number">0</span>; t &lt; warriors.<span class="built_in">size</span>(); t++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (warriors[t] == temp)</span><br><span class="line">&#123;</span><br><span class="line">warriors.erase(warriors.<span class="built_in">begin</span>() + t);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Time::create_event</span><span class="params">(headquarter &amp;a, headquarter &amp;b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (NowTime * <span class="number">60</span> &gt; TotalTime)</span><br><span class="line">&#123;</span><br><span class="line">is_continue = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">a.produce(NowTime);</span><br><span class="line">b.produce(NowTime);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Time::escape_event</span><span class="params">(headquarter &amp;a, headquarter &amp;b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">auto</span> &amp;x1 = a.get_warrios();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> t = <span class="number">0</span>; t &lt; x1.<span class="built_in">size</span>(); t++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (x1[t]-&gt;get_name() == <span class="string">"lion"</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (x1[t]-&gt;is_escape())</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="built_in">std</span>::setfill(<span class="string">'0'</span>) &lt;&lt; <span class="built_in">std</span>::setw(<span class="number">3</span>) &lt;&lt; NowTime;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">":05 %s %s %d ran away\n"</span>, a.get_name(),</span><br><span class="line">x1[t]-&gt;get_name().c_str(), t + <span class="number">1</span>);</span><br><span class="line">x1.erase(x1.<span class="built_in">begin</span>() + t);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">auto</span> &amp;x2 = b.get_warrios();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> t = <span class="number">0</span>; t &lt; x2.<span class="built_in">size</span>(); t++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (x2[t]-&gt;get_name() == <span class="string">"lion"</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (x2[t]-&gt;is_escape())</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="built_in">std</span>::setfill(<span class="string">'0'</span>) &lt;&lt; <span class="built_in">std</span>::setw(<span class="number">3</span>) &lt;&lt; NowTime;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">":05 %s %s %d ran away\n"</span>, b.get_name(),</span><br><span class="line">x2[t]-&gt;get_name().c_str(), t + <span class="number">1</span>);</span><br><span class="line">x2.erase(x2.<span class="built_in">begin</span>() + t);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Time::forward_event</span><span class="params">(headquarter &amp;a, headquarter &amp;b, city **arr)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">auto</span> &amp;x1 = a.get_warrios();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> t = <span class="number">0</span>; t &lt; x1.<span class="built_in">size</span>(); t++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">auto</span> ptemp = x1[t]-&gt;forward(<span class="number">1</span>);</span><br><span class="line">arr[ptemp-&gt;get_loc()]-&gt;add_qwarriors(ptemp);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">auto</span> &amp;x2 = b.get_warrios();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> t = <span class="number">0</span>; t &lt; x2.<span class="built_in">size</span>(); t++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">auto</span> ptemp = x2[t]-&gt;forward(<span class="number">-1</span>);</span><br><span class="line">arr[ptemp-&gt;get_loc()]-&gt;add_qwarriors(ptemp);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Time::rob_event</span><span class="params">(warrior *a, warrior *b, <span class="keyword">int</span> City)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (a-&gt;get_name() == <span class="string">"wolf"</span>&amp;&amp;b-&gt;get_name() != <span class="string">"wolf"</span>)</span><br><span class="line">a-&gt;before_game(b, NowTime, City);</span><br><span class="line"><span class="keyword">if</span> (b-&gt;get_name() == <span class="string">"wolf"</span>&amp;&amp;a-&gt;get_name() != <span class="string">"wolf"</span>)</span><br><span class="line">b-&gt;before_game(a, NowTime, City);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Time::fight_event</span><span class="params">(warrior *a, warrior *b, <span class="keyword">int</span> choose)</span><span class="comment">//choose是city的编号</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">a-&gt;sort_weapons();</span><br><span class="line">b-&gt;sort_weapons();</span><br><span class="line"><span class="keyword">int</span> t1 = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> t2 = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> flag = <span class="number">2</span>;<span class="comment">//-1表示a赢，0表示打和，1表示b赢,2表示都死了</span></span><br><span class="line"><span class="keyword">while</span> (!a-&gt;is_die() &amp;&amp; !b-&gt;is_die())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (a-&gt;get_weapons().<span class="built_in">size</span>() == <span class="number">0</span> &amp;&amp; b-&gt;get_weapons().<span class="built_in">size</span>() == <span class="number">0</span>)</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (a-&gt;get_weapons().<span class="built_in">size</span>() == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> s = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">auto</span> x : b-&gt;get_weapons())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (x-&gt;get_damage() != <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">s = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//攻击力为0的arrow,和攻击力为0的sword</span></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (x-&gt;get_damage() == <span class="number">0</span> &amp;&amp; x-&gt;get_use_times() != <span class="number">0</span>)</span><br><span class="line">s = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (s == <span class="number">1</span>)</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (b-&gt;get_weapons().<span class="built_in">size</span>() == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> s = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">auto</span> x : a-&gt;get_weapons())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (x-&gt;get_damage() != <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">s = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (x-&gt;get_damage() == <span class="number">0</span> &amp;&amp; x-&gt;get_use_times() != <span class="number">0</span>)</span><br><span class="line">s = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (s == <span class="number">1</span>)</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (a-&gt;get_weapons().<span class="built_in">size</span>() != <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> dmg = a-&gt;gaming(t1%a-&gt;get_weapons().<span class="built_in">size</span>(), t1);</span><br><span class="line">b-&gt;change_life(dmg);</span><br><span class="line"><span class="keyword">if</span> (a-&gt;is_die())</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (b-&gt;is_die())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (b-&gt;get_weapons().<span class="built_in">size</span>() != <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> dmg = b-&gt;gaming(t2%b-&gt;get_weapons().<span class="built_in">size</span>(), t2);</span><br><span class="line">a-&gt;change_life(dmg);</span><br><span class="line"><span class="keyword">if</span> (b-&gt;is_die())</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">++t1;</span><br><span class="line">++t2;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//让a是红，这里交换指针指向的值并不会影响实际的值</span></span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="built_in">std</span>::setfill(<span class="string">'0'</span>) &lt;&lt; <span class="built_in">std</span>::setw(<span class="number">3</span>) &lt;&lt; NowTime;</span><br><span class="line"><span class="keyword">if</span> (a-&gt;get_color() == <span class="string">"blue"</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">auto</span> temp = a;</span><br><span class="line">a = b;</span><br><span class="line">b = temp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!a-&gt;is_die() &amp;&amp; !b-&gt;is_die())</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">":40 both red %s %d and blue %s %d were alive in city %d\n"</span>,</span><br><span class="line">a-&gt;get_name().c_str(), a-&gt;get_seria(), b-&gt;get_name().c_str(), b-&gt;get_seria(),</span><br><span class="line">choose);</span><br><span class="line">a-&gt;after_game(NowTime, choose);</span><br><span class="line">b-&gt;after_game(NowTime, choose);</span><br><span class="line">flag = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (a-&gt;is_die() &amp;&amp; b-&gt;is_die())</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">":40 both red %s %d and blue %s %d died in city %d\n"</span>,</span><br><span class="line">a-&gt;get_name().c_str(), a-&gt;get_seria(), b-&gt;get_name().c_str(), b-&gt;get_seria(),</span><br><span class="line">choose);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (a-&gt;is_die())</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">":40 blue %s %d killed red %s %d in city %d remaining %d elements\n"</span>,</span><br><span class="line">b-&gt;get_name().c_str(), b-&gt;get_seria(), a-&gt;get_name().c_str(), a-&gt;get_seria(), choose,</span><br><span class="line">b-&gt;get_life());</span><br><span class="line">b-&gt;rob_weapon(a);</span><br><span class="line">b-&gt;after_game(NowTime, choose);</span><br><span class="line">flag = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (b-&gt;is_die())</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">":40 red %s %d killed blue %s %d in city %d remaining %d elements\n"</span>,</span><br><span class="line">a-&gt;get_name().c_str(), a-&gt;get_seria(), b-&gt;get_name().c_str(), b-&gt;get_seria(), choose,</span><br><span class="line">a-&gt;get_life());</span><br><span class="line">flag = <span class="number">-1</span>;</span><br><span class="line">a-&gt;rob_weapon(b);</span><br><span class="line">a-&gt;after_game(NowTime, choose);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> flag;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Time::headquarte_report</span><span class="params">(headquarter &amp;a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n = a.get_totalife();</span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="built_in">std</span>::setfill(<span class="string">'0'</span>) &lt;&lt; <span class="built_in">std</span>::setw(<span class="number">3</span>) &lt;&lt; NowTime;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">":50 %d elements in %s headquarter\n"</span>, n, a.get_name());</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Time::warriors_report</span><span class="params">(warrior *a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">a-&gt;report(NowTime, a-&gt;get_color().c_str());</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(weapon *a, weapon *b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (a-&gt;get_seria() == b-&gt;get_seria())</span><br><span class="line"><span class="keyword">return</span> a-&gt;get_use_times() &lt; b-&gt;get_use_times();</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">return</span> a-&gt;get_seria() &lt; b-&gt;get_seria();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp1</span><span class="params">(weapon *a, weapon *b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (a-&gt;get_seria() == b-&gt;get_seria())</span><br><span class="line"><span class="keyword">return</span> a-&gt;get_use_times() &gt; b-&gt;get_use_times();</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">return</span> a-&gt;get_seria() &lt; b-&gt;get_seria();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">warrior::Delete_weapon</span><span class="params">(weapon* w)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> t = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">auto</span> x : weapons)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (x == w)</span><br><span class="line">&#123;</span><br><span class="line">weapons.erase(weapons.<span class="built_in">begin</span>() + t);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">++t;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">warrior::sort_weapons</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">sort(weapons.<span class="built_in">begin</span>(), weapons.<span class="built_in">end</span>(), cmp);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">warrior::report</span><span class="params">(<span class="keyword">int</span> t, <span class="keyword">const</span> <span class="keyword">char</span> *N)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="built_in">std</span>::setfill(<span class="string">'0'</span>) &lt;&lt; <span class="built_in">std</span>::setw(<span class="number">3</span>) &lt;&lt; t;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">":55 %s %s %d has %d sword %d bomb %d arrow and %d elements\n"</span>,</span><br><span class="line">N, name.c_str(), seria, WeaponsNum[<span class="number">0</span>], WeaponsNum[<span class="number">1</span>], WeaponsNum[<span class="number">2</span>], life);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//time小时，str是红蓝的名字，city是city的编号</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dragon::yell</span><span class="params">(<span class="keyword">int</span> time, <span class="keyword">int</span> city)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="built_in">std</span>::setw(<span class="number">3</span>) &lt;&lt; <span class="built_in">std</span>::setfill(<span class="string">'0'</span>) &lt;&lt; time;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">":40 %s dragon %d yelled in city %d\n"</span>, colorname.c_str(), seria, city);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">warrior::gaming</span><span class="params">(<span class="keyword">int</span> times, <span class="keyword">int</span> &amp;t)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">auto</span> x = weapons[times];</span><br><span class="line"><span class="keyword">auto</span> p = x-&gt;using_weapon(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span> (is_use_bomb())</span><br><span class="line">life -= p.second;</span><br><span class="line"><span class="keyword">if</span> (x-&gt;is_bad())</span><br><span class="line">&#123;</span><br><span class="line">--WeaponsNum[x-&gt;get_seria()];</span><br><span class="line">--t;</span><br><span class="line"><span class="keyword">int</span> k = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">auto</span> x0 : weapons)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (x0 == x)</span><br><span class="line">&#123;</span><br><span class="line">weapons.erase(weapons.<span class="built_in">begin</span>() + k);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">k++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">delete</span> x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> p.first;</span><br><span class="line">&#125;</span><br><span class="line">dragon::dragon(<span class="keyword">int</span> l, <span class="keyword">int</span> s, <span class="keyword">int</span> d, <span class="keyword">int</span> L, <span class="keyword">int</span> r, <span class="keyword">int</span> p) :</span><br><span class="line">warrior(l, s, d, L, r, p)</span><br><span class="line">&#123;</span><br><span class="line">name = <span class="string">"dragon"</span>;</span><br><span class="line">factorial::creator_weapon(d, s, <span class="number">1</span>, weapons, WeaponsNum);</span><br><span class="line">&#125;</span><br><span class="line">ninja::ninja(<span class="keyword">int</span> l, <span class="keyword">int</span> s, <span class="keyword">int</span> d, <span class="keyword">int</span> L, <span class="keyword">int</span> r, <span class="keyword">int</span> p) :</span><br><span class="line">warrior(l, s, d, L, r, p)</span><br><span class="line">&#123;</span><br><span class="line">name = <span class="string">"ninja"</span>;</span><br><span class="line">factorial::creator_weapon(d, s, <span class="number">2</span>, weapons, WeaponsNum);</span><br><span class="line">&#125;</span><br><span class="line">iceman::iceman(<span class="keyword">int</span> l, <span class="keyword">int</span> s, <span class="keyword">int</span> d, <span class="keyword">int</span> L, <span class="keyword">int</span> r, <span class="keyword">int</span> p) :</span><br><span class="line">warrior(l, s, d, L, r, p)</span><br><span class="line">&#123;</span><br><span class="line">name = <span class="string">"iceman"</span>;</span><br><span class="line">factorial::creator_weapon(d, s, <span class="number">1</span>, weapons, WeaponsNum);</span><br><span class="line">&#125;</span><br><span class="line">lion::lion(<span class="keyword">int</span> l, <span class="keyword">int</span> s, <span class="keyword">int</span> d, <span class="keyword">int</span> L, <span class="keyword">int</span> r, <span class="keyword">int</span> p, <span class="keyword">int</span> k) :</span><br><span class="line">warrior(l, s, d, L, r, p), K(k)</span><br><span class="line">&#123;</span><br><span class="line">name = <span class="string">"lion"</span>;</span><br><span class="line">loyalty = r;</span><br><span class="line">factorial::creator_weapon(d, s, <span class="number">1</span>, weapons, WeaponsNum);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">warrior::rob_weapon</span><span class="params">(warrior* enermy)</span><span class="comment">//抢劫武器</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> <span class="built_in">min</span> = INT_MAX;</span><br><span class="line"><span class="keyword">if</span> (weapons.<span class="built_in">size</span>() &gt;= <span class="number">10</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">auto</span> x : enermy-&gt;get_weapons())</span><br><span class="line"><span class="keyword">delete</span> x;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">sort(enermy-&gt;get_weapons().<span class="built_in">begin</span>(), enermy-&gt;get_weapons().<span class="built_in">end</span>(), cmp1);</span><br><span class="line"><span class="keyword">int</span> t = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (weapons.<span class="built_in">size</span>() != <span class="number">10</span> &amp;&amp; t &lt; enermy-&gt;get_weapons().<span class="built_in">size</span>())</span><br><span class="line">&#123;</span><br><span class="line">weapons.push_back(enermy-&gt;get_weapons()[t]);</span><br><span class="line">enermy-&gt;get_weapons()[t]-&gt;change_damege(get_attack());</span><br><span class="line">++WeaponsNum[enermy-&gt;get_weapons()[t]-&gt;get_seria()];</span><br><span class="line">++t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> k = t; k &lt; enermy-&gt;get_weapons().<span class="built_in">size</span>(); k++)</span><br><span class="line"><span class="keyword">delete</span> enermy-&gt;get_weapons()[k];</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//wolf的抢劫不删除剩余的武器</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">wolf::wolf_rob</span><span class="params">(warrior* enermy, <span class="keyword">int</span> NowTime, <span class="keyword">int</span> City)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (weapons.<span class="built_in">size</span>() &gt;= <span class="number">10</span> || enermy-&gt;get_weapons().<span class="built_in">size</span>() == <span class="number">0</span>)</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">int</span> <span class="built_in">min</span> = INT_MAX;</span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">vector</span>&lt;weapon*&gt; temp;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">auto</span> x : enermy-&gt;get_weapons())</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">min</span> = <span class="built_in">min</span> &lt; x-&gt;get_seria() ? <span class="built_in">min</span> : x-&gt;get_seria();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">auto</span> x : enermy-&gt;get_weapons())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (x-&gt;get_seria() == <span class="built_in">min</span>)</span><br><span class="line">&#123;</span><br><span class="line">temp.push_back(x);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//把武器排好序</span></span><br><span class="line"><span class="built_in">std</span>::sort(temp.<span class="built_in">begin</span>(), temp.<span class="built_in">end</span>(), cmp1);</span><br><span class="line"><span class="keyword">int</span> t = <span class="number">0</span>;</span><br><span class="line"><span class="comment">//把要缴获的武器放进，容器里</span></span><br><span class="line"><span class="keyword">while</span> (weapons.<span class="built_in">size</span>() != <span class="number">10</span> &amp;&amp; t &lt; temp.<span class="built_in">size</span>())</span><br><span class="line">&#123;</span><br><span class="line">weapons.push_back(temp[t]);</span><br><span class="line">temp[t]-&gt;change_damege(get_attack());</span><br><span class="line">++WeaponsNum[temp[t]-&gt;get_seria()];</span><br><span class="line"><span class="comment">//把敌人的武器erase但不用delete;这里的erase只要一直begin就好！！</span></span><br><span class="line">enermy-&gt;change_weaponnum(<span class="built_in">min</span>);</span><br><span class="line">enermy-&gt;Delete_weapon(temp[t]);</span><br><span class="line">++t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="built_in">std</span>::setfill(<span class="string">'0'</span>) &lt;&lt; <span class="built_in">std</span>::setw(<span class="number">3</span>) &lt;&lt; NowTime;</span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">string</span> s1;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">min</span> == <span class="number">0</span>)</span><br><span class="line">s1 = <span class="string">"sword"</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">min</span> == <span class="number">1</span>)</span><br><span class="line">s1 = <span class="string">"bomb"</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">s1 = <span class="string">"arrow"</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">":35 %s %s %d took %d %s from %s %s %d in city %d\n"</span>, colorname.c_str(),</span><br><span class="line">get_name().c_str(), get_seria(), t, s1.c_str(), enermy-&gt;get_color().c_str(),</span><br><span class="line">enermy-&gt;get_name().c_str(), enermy-&gt;get_seria(), City);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> NUM = <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAX_CITY = <span class="number">22</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Delete</span><span class="params">(warrior *x, headquarter &amp;a, headquarter &amp;b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (x-&gt;get_color() == a.get_name())</span><br><span class="line">a.delete_warrior(x);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">b.delete_warrior(x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> red[] = &#123; <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">1</span>, <span class="number">0</span> &#125;;<span class="comment">//红色司令部制造武士的顺序</span></span><br><span class="line"><span class="keyword">int</span> blue[] = &#123; <span class="number">3</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">4</span> &#125;;<span class="comment">//蓝色司令部制造武士的顺序</span></span><br><span class="line"><span class="keyword">int</span> lifearr[<span class="number">5</span>];</span><br><span class="line"><span class="keyword">int</span> attackarr[<span class="number">5</span>];</span><br><span class="line"><span class="keyword">int</span> TestNum, M, N, K, T, count = <span class="number">1</span>;<span class="comment">//M生命元，N城市数量，K lion的忠诚消耗，T总时间</span></span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">cin</span> &gt;&gt; TestNum;</span><br><span class="line"><span class="keyword">while</span> (TestNum--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">cin</span> &gt;&gt; M &gt;&gt; N &gt;&gt; K &gt;&gt; T;</span><br><span class="line">city *CityArr[MAX_CITY];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> t = <span class="number">1</span>; t &lt;= N; t++)</span><br><span class="line">CityArr[t] = <span class="keyword">new</span> city(t);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Case %d:\n"</span>, count);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> b = <span class="number">0</span>; b &lt; NUM; b++)</span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">cin</span> &gt;&gt; lifearr[b];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> b = <span class="number">0</span>; b &lt; NUM; b++)</span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">cin</span> &gt;&gt; attackarr[b];</span><br><span class="line"><span class="function">headquarter <span class="title">a</span><span class="params">(M, red, <span class="number">0</span>, N, lifearr, attackarr, K)</span></span>;</span><br><span class="line"><span class="function">headquarter <span class="title">b</span><span class="params">(M, blue, <span class="number">1</span>, N, lifearr, attackarr, K)</span></span>;</span><br><span class="line">CityArr[<span class="number">0</span>] = &amp;a;</span><br><span class="line">CityArr[N + <span class="number">1</span>] = &amp;b;</span><br><span class="line"><span class="function">Time <span class="title">temp</span><span class="params">(T)</span></span>;</span><br><span class="line"><span class="keyword">while</span> (a.is_continue() &amp;&amp; b.is_continue())</span><br><span class="line">&#123;</span><br><span class="line">temp.create_event(a, b);</span><br><span class="line"><span class="keyword">if</span> (temp.get_nowtime() * <span class="number">60</span> &gt;= T)</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">temp.escape_event(a, b);</span><br><span class="line"><span class="keyword">if</span> (temp.get_nowtime() * <span class="number">60</span> + <span class="number">5</span> &gt;= T)</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> t = <span class="number">1</span>; t &lt;= N; t++)</span><br><span class="line">CityArr[t]-&gt;show_qwarriors().<span class="built_in">clear</span>();</span><br><span class="line">temp.forward_event(a, b, CityArr);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> t = <span class="number">0</span>; t &lt;= N + <span class="number">1</span>; t++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (CityArr[t]-&gt;show_qwarriors().<span class="built_in">size</span>() &gt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">auto</span> x : CityArr[t]-&gt;show_qwarriors())</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="built_in">std</span>::setfill(<span class="string">'0'</span>) &lt;&lt; <span class="built_in">std</span>::setw(<span class="number">3</span>) &lt;&lt; temp.get_nowtime();</span><br><span class="line"><span class="keyword">if</span> (x-&gt;get_loc() != b.get_location() &amp;&amp; x-&gt;get_loc() != a.get_location())</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">":10 %s %s %d marched to city %d with %d elements and force %d\n"</span>,</span><br><span class="line">x-&gt;get_color().c_str(), x-&gt;get_name().c_str(), x-&gt;get_seria(), x-&gt;get_loc(),</span><br><span class="line">x-&gt;get_life(), x-&gt;get_attack());</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (x-&gt;get_loc() == a.get_location())</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">":10 %s %s %d reached %s headquarter with %d elements and force %d\n"</span>,</span><br><span class="line">b.get_name(), x-&gt;get_name().c_str(), x-&gt;get_seria(), a.get_name(),</span><br><span class="line">x-&gt;get_life(), x-&gt;get_attack());</span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="built_in">std</span>::setfill(<span class="string">'0'</span>) &lt;&lt; <span class="built_in">std</span>::setw(<span class="number">3</span>) &lt;&lt; temp.get_nowtime();</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">":10 %s headquarter was taken\n"</span>, a.get_name());</span><br><span class="line">a.Been_Token();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">":10 %s %s %d reached %s headquarter with %d elements and force %d\n"</span>,</span><br><span class="line">a.get_name(), x-&gt;get_name().c_str(), x-&gt;get_seria(), b.get_name(),</span><br><span class="line">x-&gt;get_life(), x-&gt;get_attack());</span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="built_in">std</span>::setfill(<span class="string">'0'</span>) &lt;&lt; <span class="built_in">std</span>::setw(<span class="number">3</span>) &lt;&lt; temp.get_nowtime();</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">":10 %s headquarter was taken\n"</span>, b.get_name());</span><br><span class="line">b.Been_Token();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!a.is_continue() || !b.is_continue())</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">if</span> (temp.get_nowtime() * <span class="number">60</span> + <span class="number">10</span> &gt;= T)</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> t = <span class="number">1</span>; t &lt;= N; t++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (CityArr[t]-&gt;show_qwarriors().<span class="built_in">size</span>() == <span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">auto</span> x = CityArr[t]-&gt;show_qwarriors();</span><br><span class="line"><span class="keyword">auto</span> x1 = x[<span class="number">0</span>];</span><br><span class="line"><span class="keyword">auto</span> x2 = x[<span class="number">1</span>];</span><br><span class="line">temp.rob_event(x1, x2, t);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (temp.get_nowtime() * <span class="number">60</span> + <span class="number">35</span> &gt;= T)</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">auto</span> redheadquarterwarriors = a.get_warrios();</span><br><span class="line"><span class="keyword">auto</span> blueheadquarterwarriors = b.get_warrios();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> t = <span class="number">1</span>; t &lt;= N; t++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//奇数红色先攻击，偶数蓝色先攻击</span></span><br><span class="line"><span class="keyword">if</span> (CityArr[t]-&gt;show_qwarriors().<span class="built_in">size</span>() == <span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> s = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">auto</span> x = CityArr[t]-&gt;show_qwarriors();</span><br><span class="line"><span class="keyword">auto</span> x1 = x[<span class="number">0</span>];</span><br><span class="line"><span class="keyword">auto</span> x2 = x[<span class="number">1</span>];</span><br><span class="line"><span class="comment">//让x1为红，x2为蓝</span></span><br><span class="line"><span class="keyword">if</span> (t % <span class="number">2</span> == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (x1-&gt;get_color() == <span class="string">"blue"</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">std</span>::swap(x1, x2);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (t % <span class="number">2</span> == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (x1-&gt;get_color() == <span class="string">"red"</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">std</span>::swap(x1, x2);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> result = temp.fight_event(x1, x2, t);</span><br><span class="line"><span class="keyword">if</span> (result == <span class="number">1</span>)<span class="comment">//blue赢</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (x1-&gt;get_color() == <span class="string">"red"</span>)<span class="comment">//没交换</span></span><br><span class="line">&#123;</span><br><span class="line">Delete(x1, a, b);</span><br><span class="line">CityArr[t]-&gt;city_delete(x1);</span><br><span class="line"><span class="keyword">delete</span> x1;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">Delete(x2, a, b);</span><br><span class="line">CityArr[t]-&gt;city_delete(x2);</span><br><span class="line"><span class="keyword">delete</span> x2;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (result == <span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (x1-&gt;get_color() == <span class="string">"blue"</span>)</span><br><span class="line">&#123;</span><br><span class="line">Delete(x1, a, b);</span><br><span class="line">CityArr[t]-&gt;city_delete(x1);</span><br><span class="line"><span class="keyword">delete</span> x1;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">Delete(x2, a, b);</span><br><span class="line">CityArr[t]-&gt;city_delete(x2);</span><br><span class="line"><span class="keyword">delete</span> x2;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (result == <span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (x1-&gt;get_color() == <span class="string">"red"</span>)</span><br><span class="line">&#123;</span><br><span class="line">a.delete_warrior(x1);</span><br><span class="line">b.delete_warrior(x2);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">a.delete_warrior(x2);</span><br><span class="line">b.delete_warrior(x1);</span><br><span class="line">&#125;</span><br><span class="line">CityArr[t]-&gt;city_delete(x1);</span><br><span class="line">CityArr[t]-&gt;city_delete(x2);</span><br><span class="line"><span class="keyword">delete</span> x[<span class="number">1</span>];</span><br><span class="line"><span class="keyword">delete</span> x[<span class="number">0</span>];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (temp.get_nowtime() * <span class="number">60</span> + <span class="number">40</span> &gt;= T)</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">temp.headquarte_report(a);</span><br><span class="line">temp.headquarte_report(b);</span><br><span class="line"><span class="keyword">if</span> (temp.get_nowtime() * <span class="number">60</span> + <span class="number">50</span> &gt;= T)</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="comment">//temp.warrior_report(a, b);</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> t = <span class="number">0</span>; t &lt;= N + <span class="number">1</span>; t++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">auto</span> x = CityArr[t]-&gt;show_qwarriors();</span><br><span class="line"><span class="keyword">if</span> (x.<span class="built_in">size</span>() == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">temp.warriors_report(x[<span class="number">0</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (x.<span class="built_in">size</span>() == <span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (x[<span class="number">0</span>]-&gt;get_color() == <span class="string">"red"</span>)</span><br><span class="line">&#123;</span><br><span class="line">temp.warriors_report(x[<span class="number">0</span>]);</span><br><span class="line">temp.warriors_report(x[<span class="number">1</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">temp.warriors_report(x[<span class="number">1</span>]);</span><br><span class="line">temp.warriors_report(x[<span class="number">0</span>]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (temp.get_nowtime() * <span class="number">60</span> + <span class="number">55</span> &gt;= T)</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">temp.add_nowtime();</span><br><span class="line">&#125;</span><br><span class="line">++count;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这个题目，我花了差不多4天才全部做出来的，一开始也没很好的设计，就是看见有什么功能，就写一个函数的声明，然后写另一个类的时候，发现我要用到前面写的类的函数时，才去定义相应的函数，所以可能会很混乱。我写这篇文章一是为了重新理一下思路，也希望能给后面设计的人一个想法吧。&lt;/p&gt;
    
    </summary>
    
    
      <category term="技术" scheme="http://liaozhifeng.gitee.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
  </entry>
  
</feed>
